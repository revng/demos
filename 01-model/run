#!/usr/bin/env bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
source "${SCRIPT_DIR}/../common"

cd "$SCRIPT_DIR"

# An empty model is a valid model
revng model opt /dev/null -verify -Y

# Create a simple raw binary containing x86-64 code
printf '\x48\x01\xf7\x48\x89\xf8\xc3\x90' > sum

# Disassemble the program above
objdump -D -Mintel,x86-64 -b binary -m i386:x86-64 sum

# Disassemble using rev.ng
revng artifact disassemble sum --model model-1.yml | revng ptml --color

# Show differences between model versions
git diff --no-index model-1.yml model-2.yml | cat || true

# Decompile the program
revng artifact decompile sum --model model-2.yml | revng ptml --color

# Show differences between model versions
git diff --no-index model-2.yml model-3.yml | cat || true

# Decompile again
revng artifact decompile sum --model model-3.yml | revng ptml --color

# Create a simple C program
cat > example.c <<EOF
int main(int argc, char *argv[]) {
  return argc * 3;
}
EOF

# Compile it to an ELF executable
gcc example.c -o example -O2

# Run the "import-binary" analysis
revng analyze import-binary example -o /dev/null

# Decompile using renvg analyses
revng artifact --analyze decompile-to-single-file example | revng ptml | grep -A2 -B1 '\bmain\b'
