#!/usr/bin/env bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
source "${SCRIPT_DIR}/../common"

cd "$SCRIPT_DIR"

RESUME_DIRECTORY="resume-directory"
BINARY="sum42"

# Compile the obfuscated assembly
gcc -no-pie -masm=intel "${BINARY}".S -nostdlib -o "${BINARY}"

# Lift the binary with revng
rm -rf "${RESUME_DIRECTORY}"
revng artifact cleanup-ir --resume="${RESUME_DIRECTORY}" -o /dev/null "${BINARY}" --analyze

# Extract LLVM IR at different stages of the decompilation pipeline, to show the
# dead code and bogus stack traffic is gradually optimized away by the default
# revng decompilation pipeline.
./extract "local_0x$(address_of "${BINARY}" _start):Code_x86_64" "${RESUME_DIRECTORY}"

echo ""
echo "Obfuscated"
cat 3-enforce-abi.ll

echo ""
echo "Debfuscated"
cat 5-cleanup-ir.ll
